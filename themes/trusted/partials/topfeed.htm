[blogPosts]
description = "Top feed"
postsPerPage = 20
pageNumber = "{{ :page }}"
noPostsMessage = "Is Empty"
sortOrder = "published_at desc"
categoryFilter = "top-brokers"



[viewBag]
==
{% set posts = blogPosts.posts %}

<button type="button" data-dir="-1" class="btn absolute left font-20 rounded cursor-pointer p-0 hide">❮</button>
<button type="button" data-dir="1" class="btn absolute right font-20 rounded cursor-pointer p-0 hide">❯</button>
{% for post in posts %}
<a href="/{{ post.categories[0].slug }}/{{ post.slug }}" class="snippet inline-block wrap p-20 white-bg hover-primary-bg hover-white-txt mx-10">
    <div class="preview">
        <img src="{{ (post.featured_images|first).path }}" alt="" class="full-width full-height contain box p-20">
    </div>
    <div class="caption font-bold font-18 py-20 px-5">{{ post.title }}</div>
    <div class="excerpt font-14 px-5">{{ post.excerpt }}</div>
</a>
{% endfor %}
<div class="bar absolute bottom">
    <label class="inline-block no-events">
        <input type="radio" name="topfeed" hidden>
        <hr class="inline-block border-none rounded-5">
    </label>
</div>
<script>
    (feed => {
        var timeout;
        var form = feed.parentNode;
        var btns = feed.querySelectorAll('button')
            btns.forEach((btn) => {
            btn.onclick = event => {
                feed.scrollLeft += feed.offsetWidth * parseInt(btn.dataset.dir);
                setTimeout(() => {
                    let i = Math.ceil(feed.scrollLeft / feed.offsetWidth);
                    form.topfeed[i].checked = true;
                }, 800)
            }
        });
        feed.onscroll = event => {
            clearTimeout(timeout);
            timeout = setTimeout(() => {
                scroller();
            }, 250);
        }
        function scroller () {
            if (feed.scrollLeft) {
                btns[0].classList.toggle('hide', false);
                btns[1].classList.toggle('hide', (feed.scrollLeft + feed.offsetWidth) >= feed.scrollWidth);
            } else {
                btns[0].classList.toggle('hide', true);
                btns[1].classList.toggle('hide', (feed.scrollLeft + feed.offsetWidth) >= feed.scrollWidth);
            }
        }
        var bar = feed.querySelector('.bar');
        var point = bar.querySelector('label');

        function slider() {
            clearTimeout(timeout);
            setTimeout(() => {
                bar.innerHTML = "";
                feed.scrollLeft = 0;
                scroller();
                for (let i = 0; i <= (feed.scrollWidth / feed.offsetWidth) >> 0; i++) {
                    let p = point.cloneNode(true)
                    bar.appendChild(p);
                    if (i ===  (feed.scrollLeft / feed.offsetWidth) >> 0) {
                        p.click();
                    }
                }
            }, 400);
        }
        window.onresize = () => {
            slider();
        }
        slider();
    })(document.currentScript.parentNode)
</script>
